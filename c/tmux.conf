#!/bin/bash
#unbind C-Space
#set -g prefix2 C-Space
# bind C-Space send-prefix
set -g prefix C-a 
bind C-a send-prefix 
# Automatically start a session if none exists
if "[[ ! -v TMUX ]]" {
new-session -d
send-keys -t 0 "tmux attach" Enter  # Optional, to re-attach immediately
}
set -g default-terminal "xterm-256color"  # Or "screen-256color" or just "screen"
# run-shell "${HOME}/new.sh"
  # Or ~/.zshrc, etc.
# bind r run 'tmux set-option -g status-style bg=colour$(printf %b "$((RANDOM%222))")'
bind r run "tmux source-file $HOME/.config/tmux/tmux.conf \; tmux display-message '~/.config/tmux/tmux.conf'"
bind R run "~/start/config/tmux/tmuxbg.sh \;"
#'tmux set-option -g status-style bg="$((RANDOM%6))"'
# quick reload
set -g mouse on
bind-key m set-option -g mouse
# \; display "Mouse: #{?mouse,ON,OFF}"
set -g set-clipboard on
bind 9 display-popup -w22 -h22 -E 'bash ~/start/config/tmux/scripts/kk.sh; '

# $(printf %b "$EPOCHSECONDS aa\n" && sleep 1; )"' 
# bind m set mouse on \; display "mouse on __ (M) to off!"
# bind M set mouse off \; display "mouse off __ (M) to on!"
bind c copy-mode
bind Enter copy-mode 
# send-keys -X cursor-up
# bind -T copy-mode x display-message "$$(tail -n1 ~/logs/tm.log)"
bind -T copy-mode Enter send-keys -X copy-selection \;  
#save-buffer ~/logs/tm.log
bind -T copy-mode k send-keys -X copy-selection \;  
bind -T root C-u run 'unset -v aa && aa=$(tmux capture-pane -q -J -p|grep -oE "(http|https|wwww.|.com)://[a-zA-Z0-9./?=_-]*"|sort -u|fzf --tmux --exit-0 -h -i -m --sync --cycle --ansi --bind "q:abort" --info inline --inline-info || return 1) && [ $aa ] &&  xdg-open $aas || return 0 \;' 
#save-buffer \; run ~/logs/buffer.log \; send q
bind -T copy-mode c send-keys -X copy-selection \;
# save-buffer ~/logs/buffer.log
bind -T copy-mode Space send-keys -X begin-selection 
bind b choose-buffer
bind S command-prompt "new-window -n %1 'ssh %1'"
bind U command-prompt "aa -n %1 'ssh %1'"
bind p paste-buffer
bind-key C run "tmux set-option -g status-style bg=colour$(printf %b $((RANDOM%7)));"
bind-key "-" split-window -v -c "#{pane_current_path}"
bind-key "_" split-window -fh -c "#{pane_current_path}"
bind-key '|' split-window -fh -c "#{pane_current_path}"
#Disable exit-empty
set -s exit-empty on
# bind-key -T root C-u run 'for i in $(tmux list-panes|cut -c1) \; do 
# panes=($(tmux list-panes|cut -c1))
bind C-w run 'zz=$(tmux capture-pane -Jqp -t $i|grep -Eo "(http|https)://[a-zA-Z0-9./?=_-]*"|sort -u|fzf-tmux -h -i -m --sync --cycle --ansi --bind "q:abort" --info inline --inline-info) && xdg-open $aa \;' 


# -one "aa"; done; echo ok"

bind 0 run 'bash -c ~/88/s/uurl.sh'


# bind u run gg="$(tmux capture-pane -q -J -p|grep -Eo "(http|https)://[a-zA-Z0-9./?=_-]*"|sort -u)" \; run printf %b "${gg[*]}" | fzf 
#grep -oE '(https?):\/\/.*[^>]'"
# xdg-open $url
 # || termux-open-url $url ; 
# Change pane colors
# --bind alt-a:select-all,alt-d:deselect-all; 
set -g pane-active-border fg=cyan 
set -ag pane-active-border bg=0
# Use xclip to copy and paste with the system clipboard
bind C-c run "tmux save-buffer ~/logs/tmuxclip.log"
bind C-v run "tmux set-buffer $(head -n ~/logs/tmuxclip.log); tmux paste-buffer"
set -g set-titles on
set -g focus-events on
le="$SSH_CONNECTION"
# le={ps}
tmux_conf_copy_to_os_clipboard=true
tmux_conf_urlscan_options="--compact --dedupe"

set -g status-left-length 100
set -g status-right-length 100
# set -g status-style bg=colour1#{pane_height}
set -g status-left-style fg=7,bg=0
set -g status-right-style fg=0,bg=7
# ssh=$(ps\ a|grep\ -m1\ -e\ "ssh"|tr\ -s\ ' '\ "\n"|tail\ -n1)
ssh=$SSH_CONNECTION
#set -g status-left '#{USER}#{hostname_full_ssh}#[bg=colour204]#(tail -c 12 ~/logs/iploc.log)
# set -g message-line 4
# terminal-features ccolour 

set -g status-left '#[reverse]#{USER}#{hostname_full_ssh}#[noreverse]#[fg=colour116]#(cat ~/logs/iplo.sh)#[fg=colour20#{pane_index}]#[bg=colour5#{pane_index}]#P#[reverse]#W#{username_ssh}#{hostname_full_ssh}#{_host}#{DISPLAY}#[nobold]'

# set -g status-centre-style fg=colour25
# set -g status-centre '#I'

#set -g status-right '#{P:#{?pane_active,#[reverse],}#{pane_index}[#{pane_width}x#{pane_height}]#[default]}
#{?mouse,#[bg=red]µ#[default],}
#[default]#[default]#[noreverse]%A %d %B#[reverse]%H:%M'
# WINDOW INDICATORS
set -g window-status-separator '|'
# set -g window-status-separator '!'
set -g window-status-format ' #P#{?#{window_zoomed_flag},-, }│ #P %U #W '
set -g window-status-style fg=colour245,bg=black
set -g window-status-activity-style fg=colour4,bg=colour18,bold
set -g window-status-bell-style fg=colour0,bg=colour9,bold
set -g window-status-current-format '#{ssh_user}#F#{?#{window_zoomed_flag},+,}#{P:#{?pane_active,#[reverse],}#{pane_index}#(pwd|cut -f4- -d"/")'
set -g window-status-current-style fg=colour231,bg=colour240,bold
set -g status-right '#{prefix_highlight}#{?mouse,#[bg=red]µ#[default],}#[bg=colour#{pane_width}]#{pane_width}#[bg=colour%d]%a#[default]%Y-%m-%d#[reverse]%H:%M'
bind-key C-u run-shell "unset -v aa && aa=$(tmux capture-pane -q -J -p|grep -oE \"(http|https|wwww.|.com)://[a-zA-Z0-9./?=_-]*\"|sort -u|fzf --tmux --exit-0 -h -i -m --sync --cycle --ansi --bind \"q:abort\" --info inline --inline-info || return 1) && [ \$aa ] &&  xdg-open \$aas || return 0 ;"
# set -g /bin/bash
set -g display-time 1000
set -g renumber-windows on
set -g visual-bell off
set -g visual-activity off
set -g visual-silence off
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
run "~/start/config/tmux/plugins/tpm/tpm"

